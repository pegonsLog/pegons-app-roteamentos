#!/bin/bash

# Script de Verifica√ß√£o de Seguran√ßa
# Verifica se arquivos sens√≠veis est√£o protegidos

echo "üîç Verificando Seguran√ßa das API Keys..."
echo ""

# Cores para output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# Verificar se .gitignore existe
if [ ! -f .gitignore ]; then
    echo -e "${RED}‚ùå ERRO: Arquivo .gitignore n√£o encontrado!${NC}"
    exit 1
fi

# Verificar se environment.ts est√° no .gitignore
if grep -q "environment.ts" .gitignore; then
    echo -e "${GREEN}‚úÖ environment.ts est√° protegido no .gitignore${NC}"
else
    echo -e "${RED}‚ùå PERIGO: environment.ts N√ÉO est√° no .gitignore!${NC}"
    exit 1
fi

# Verificar se environment.prod.ts est√° no .gitignore
if grep -q "environment.prod.ts" .gitignore; then
    echo -e "${GREEN}‚úÖ environment.prod.ts est√° protegido no .gitignore${NC}"
else
    echo -e "${RED}‚ùå PERIGO: environment.prod.ts N√ÉO est√° no .gitignore!${NC}"
    exit 1
fi

# Verificar se os arquivos existem
if [ -f src/environments/environment.ts ]; then
    echo -e "${GREEN}‚úÖ environment.ts existe localmente${NC}"
else
    echo -e "${YELLOW}‚ö†Ô∏è  environment.ts n√£o encontrado (voc√™ precisa cri√°-lo)${NC}"
fi

if [ -f src/environments/environment.prod.ts ]; then
    echo -e "${GREEN}‚úÖ environment.prod.ts existe localmente${NC}"
else
    echo -e "${YELLOW}‚ö†Ô∏è  environment.prod.ts n√£o encontrado (voc√™ precisa cri√°-lo)${NC}"
fi

# Verificar se √© um reposit√≥rio Git
if [ -d .git ]; then
    echo ""
    echo "üì¶ Verificando status do Git..."
    
    # Verificar se arquivos sens√≠veis est√£o sendo rastreados
    if git ls-files | grep -q "src/environments/environment.ts"; then
        echo -e "${RED}‚ùå PERIGO: environment.ts est√° sendo rastreado pelo Git!${NC}"
        echo -e "${YELLOW}Execute: git rm --cached src/environments/environment.ts${NC}"
        exit 1
    else
        echo -e "${GREEN}‚úÖ environment.ts N√ÉO est√° sendo rastreado${NC}"
    fi
    
    if git ls-files | grep -q "src/environments/environment.prod.ts"; then
        echo -e "${RED}‚ùå PERIGO: environment.prod.ts est√° sendo rastreado pelo Git!${NC}"
        echo -e "${YELLOW}Execute: git rm --cached src/environments/environment.prod.ts${NC}"
        exit 1
    else
        echo -e "${GREEN}‚úÖ environment.prod.ts N√ÉO est√° sendo rastreado${NC}"
    fi
    
    # Verificar se h√° mudan√ßas staged que incluem os arquivos
    if git diff --cached --name-only | grep -q "environment.ts\|environment.prod.ts"; then
        echo -e "${RED}‚ùå PERIGO: Arquivos sens√≠veis est√£o staged para commit!${NC}"
        exit 1
    else
        echo -e "${GREEN}‚úÖ Nenhum arquivo sens√≠vel staged${NC}"
    fi
else
    echo ""
    echo -e "${YELLOW}‚ö†Ô∏è  N√£o √© um reposit√≥rio Git (ainda)${NC}"
    echo "Quando voc√™ executar 'git init', os arquivos j√° estar√£o protegidos."
fi

echo ""
echo -e "${GREEN}üéâ Verifica√ß√£o conclu√≠da! Suas API keys est√£o seguras.${NC}"
echo ""
echo "üìù Lembre-se:"
echo "   - NUNCA commite arquivos com API keys"
echo "   - Use environment.example.ts como template"
echo "   - Revogue chaves expostas imediatamente"
